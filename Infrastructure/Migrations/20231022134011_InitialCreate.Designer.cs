// <auto-generated />
using System;
using Infrastructure;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Infrastructure.Migrations
{
    [DbContext(typeof(FoodPackageDbContext))]
    [Migration("20231022134011_InitialCreate")]
    partial class InitialCreate
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Core.Domain.FoodPackage", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("FoodPackages");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            Name = "pakket 1"
                        },
                        new
                        {
                            Id = 2,
                            Name = "pakket 2"
                        });
                });

            modelBuilder.Entity("Core.Domain.PackageDetail", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("FoodPackageId")
                        .HasColumnType("int");

                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("FoodPackageId");

                    b.HasIndex("ProductId");

                    b.ToTable("PackageDetails");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            FoodPackageId = 1,
                            ProductId = 1
                        },
                        new
                        {
                            Id = 2,
                            FoodPackageId = 1,
                            ProductId = 2
                        });
                });

            modelBuilder.Entity("Core.Domain.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<bool>("ContainsAlcohol")
                        .HasColumnType("bit");

                    b.Property<int?>("FoodPackageId")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Picture")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("FoodPackageId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            ContainsAlcohol = false,
                            Name = "Hamburger",
                            Picture = "NA"
                        },
                        new
                        {
                            Id = 2,
                            ContainsAlcohol = true,
                            Name = "Bier",
                            Picture = "NA"
                        },
                        new
                        {
                            Id = 3,
                            ContainsAlcohol = false,
                            Name = "Danoontje",
                            Picture = "NA"
                        });
                });

            modelBuilder.Entity("Core.Domain.PackageDetail", b =>
                {
                    b.HasOne("Core.Domain.FoodPackage", "FoodPackage")
                        .WithMany("packageDetails")
                        .HasForeignKey("FoodPackageId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Core.Domain.Product", "Product")
                        .WithMany()
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("FoodPackage");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("Core.Domain.Product", b =>
                {
                    b.HasOne("Core.Domain.FoodPackage", null)
                        .WithMany("Products")
                        .HasForeignKey("FoodPackageId");
                });

            modelBuilder.Entity("Core.Domain.FoodPackage", b =>
                {
                    b.Navigation("Products");

                    b.Navigation("packageDetails");
                });
#pragma warning restore 612, 618
        }
    }
}
